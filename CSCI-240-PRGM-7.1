***************************************************************/
#include <iostream>
#include <iomanip>
#include <string>
#include <iomanip>
//symbolic contants
#define lowerbd 1.0
#define upperbd 750.0
#define MAX 150
#define MIN 25
#define PERLINE 10

using namespace std;

//functions
double randDouble();
int buildRandom( double array[]);
void print( string title, double array[], int numberOfValues );
void sort( double array[], int numberOfValues );


int main()
{
	//set srand seed
	srand(88); 
	
	//declare array and variable
	double array[MAX]; //array
	int array1; //variable
	
	//call arrays
	array1 = buildRandom( double array[] ) //error expected primary-expression before double??I will skip this error and work on the rest of the code..
	cout << "There are 98 values in the first array " << array1 << endl;

	//display the values in array
	print( "Random Array Values: ", double array[], array1 );
	
	//sort the values
	sort( double array[], array1);
	
	//second display
	print( "Sorted Random Values: ", double array[], array1);
	
	return 0;
	
}

//double function to generate random double value and return it
double randDouble()
{
	//just put return
	return lowerbd + (randDouble / MAX / upperbd - lowerbd);
}

//int funtion to fill in array of doubles with rand numbers
int buildRandom( doule array[] )
{
	//Generate random integer
   int cnt = MIN + (rand() % (MAX - MIN + 1));
   //For loop
   for (int i = 0; i < cnt; i++) {
       array[i] = randDouble();
   }
   return cnt;	
}

//void print function
void print( string title, double array[], int numberOfValues )
{
	cout << fixed << setprecision(3); //sets value 3 digits after decimal
   	cout << "\n" << title << endl<< endl;
   for (int i = 0; i < numberOfValues; i++)
   {
       if (i % 10 == 0 && i != 0) 
	   {
           cout << "\n" << array[i] << " ";
       }
       else
	   {
           cout << array[i] << " ";
       }
   }
   cout << endl;	
}

//void sort function
void sort( double array[], int numberOfValues )
{
	int index;
    for (int i = 0; i < numberOfValues - 1; i++)
   {
       index = i;
       for (int n = i + 1; n < numberOfValues; n++) 
	   {
           if (array[n] < array[index]) 
		   {
               index = n;
           }  
       }
       double ar = array[index];
       array[index] = array[i];
       array[i] = ar;
   }	
}
